DROP DATABASE IF EXISTS ALKEMY;
CREATE DATABASE IF NOT EXISTS ALKEMY;
USE ALKEMY; 

CREATE TABLE USERS(
    ID BIGINT UNSIGNED AUTO_INCREMENT,
    USERNAME VARCHAR(255) NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    CONSTRAINT PK_USERS PRIMARY KEY (ID),
    CONSTRAINT UNQ_USERS_NAME UNIQUE (USERNAME)
);

CREATE TABLE GENRES(
    ID BIGINT UNSIGNED AUTO_INCREMENT,
    NAME VARCHAR(255) NOT NULL,
    IMAGE TEXT NOT NULL,
    CREATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,    
    CONSTRAINT PK_GENRES PRIMARY KEY (ID),
    CONSTRAINT UNQ_GENRES_NAME UNIQUE (NAME)
);

CREATE TABLE CHARACTERS(
    ID BIGINT UNSIGNED AUTO_INCREMENT,
    NAME VARCHAR(255) NOT NULL,
    AGE INT UNSIGNED NOT NULL,
    WEIGHT FLOAT NOT NULL,
    STORY TEXT NOT NULL,
    IMAGE TEXT NOT NULL,
    CREATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,    
    CONSTRAINT PK_CHARACTERS PRIMARY KEY (ID),
    CONSTRAINT UNQ_GENRES_NAME UNIQUE (NAME)
);

CREATE TABLE MOVIES(
    ID BIGINT UNSIGNED AUTO_INCREMENT,
    TITLE VARCHAR(255) NOT NULL,
    RELEASE_DATE DATE NOT NULL,
    IMAGE TEXT NOT NULL,
    RATING INT UNSIGNED NOT NULL,
    CREATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,    
    CONSTRAINT PK_MOVIES PRIMARY KEY (ID),
    CONSTRAINT UNQ_TITLE UNIQUE (TITLE)
);

CREATE TABLE MOVIES_CHARACTERS(
    ID BIGINT UNSIGNED AUTO_INCREMENT,
    CHARACTER_ID BIGINT UNSIGNED NOT NULL,
    MOVIE_ID BIGINT UNSIGNED NOT NULL,
    CONSTRAINT PK_MOVIES_CHARACTERS PRIMARY KEY (ID),
    CONSTRAINT UNQ_MOVIES_CHARACTERS UNIQUE (CHARACTER_ID, MOVIE_ID),
    CONSTRAINT FK_MOVIE_CHARACTERS_CHARACTER_ID FOREIGN KEY (CHARACTER_ID) REFERENCES CHARACTERS(ID) ON DELETE CASCADE,
    CONSTRAINT FK_MOVIE_CHARACTERS_MOVIE_ID FOREIGN KEY (MOVIE_ID) REFERENCES MOVIES(ID) ON DELETE CASCADE
);

CREATE TABLE MOVIES_GENRES(
    ID BIGINT UNSIGNED AUTO_INCREMENT,
    MOVIE_ID BIGINT UNSIGNED NOT NULL,
    GENRE_ID BIGINT UNSIGNED NOT NULL,
    CONSTRAINT PK_MOVIES_GENRES PRIMARY KEY (ID),
    CONSTRAINT UNQ_MOVIES_GENRES UNIQUE (GENRE_ID, MOVIE_ID),
    CONSTRAINT FK_MOVIE_GENRES_GENRE_ID FOREIGN KEY (GENRE_ID) REFERENCES GENRES(ID) ON DELETE CASCADE,
    CONSTRAINT FK_MOVIE_GENRES_MOVIE_ID FOREIGN KEY (MOVIE_ID) REFERENCES MOVIES(ID) ON DELETE CASCADE
);

insert into CHARACTERS(NAME, AGE, WEIGHT, STORY, IMAGE) VALUES 
    ("Mickey Mouse", 25, 50, "Story about Mickey Mouse", "https://fakeimages.com/mikey-mouse"),
    ("Goofy", 50, 80, "Story about Goofy", "https://fakeimages.com/goofy"),
    ("Donald Duck", 30, 20, "Story about Donald Duck", "https://fakeimages.com/donald-duck"),
    ("Dumbo", 20, 70, "Story about Dumbo", "https://fakeimages.com/dumbo");
INSERT INTO MOVIES(TITLE, RELEASE_DATE, IMAGE, RATING) VALUES 
    ("Fantasia", "1940-06-13", "https://fakeimages.com/fantasia", 5),
    ("Goofy (A goofy movie)", "1995-12-12", "https://fakeimages.com/goofy", 3),
    ("Mickey, Donald, Goofy: The Three Musketeers", "2004-08-17", "https://fakeimages.com/the-three-musketeers", 5),
    ("Dumbo", "1941-10-23", "https://fakeimages.com/dumbo", 2);
INSERT INTO MOVIES_CHARACTERS(CHARACTER_ID,MOVIE_ID) VALUES (1,1),(2,2),(4,4),(1,3),(2,3),(3,3);
INSERT INTO GENRES(NAME, IMAGE) VALUES 
    ("Animation", "https://fakeimages.com/genre-animation"),
    ("Drama", "https://fakeimages.com/genre-drama"),
    ("Musical", "https://fakeimages.com/genre-musical"),
    ("Comedy", "https://fakeimages.com/genre-comedy");
INSERT INTO MOVIES_GENRES(GENRE_ID,MOVIE_ID) VALUES (1,1),(2,2),(4,1);
